version: "3.8"

services:
  postgres:
    build: ./library-backend/docker/postgres
    image: library-postgres:16
    container_name: library-postgres
    env_file: ./library-backend/.env.docker
    ports:
      - "15432:5432"
    volumes:
      - library_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 15
    networks:
      - library_net

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: library-pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ./library-backend/.env.docker
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - library_net

  backend:
    build: ./library-backend
    container_name: library-backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ./library-backend/.env.docker
    ports:
      - "8080:8080"
    networks:
      - library_net

  frontend:
    build: ./library-frontend
    container_name: library-frontend
    env_file: ./library-frontend/.env.docker
    ports:
      - "9000:80"
    depends_on:
      - backend
    networks:
      - library_net

volumes:
  library_pgdata:
  pgadmin_data:

networks:
  library_net:
    driver: bridge
